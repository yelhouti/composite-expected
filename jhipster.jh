application {
  config {
    baseName compositekey
    applicationType monolith
    prodDatabaseType postgresql
    buildTool gradle
    testFrameworks [protractor]
  }
  entities *
}

entity Employee{
	@id username String required
	fullname String required
}

relationship OneToMany{
	Employee{teamMember(fullname)} to Employee{manager(fullname)}
}


entity EmployeeSkill{
	// compositeId employeeSkill.name, employee.id
	@id name String required
	level Integer required
}

relationship OneToMany{
	@id Employee{skill(name)} to EmployeeSkill{employee(fullname) required}
}

entity CertificateType{
	name String required
}

entity EmployeeSkillCertificate{
    // compositeId EmployeeSkill.employee.id, EmployeeSkill.name, CertficiateType.id
	grade Integer required
    date LocalDate required
}

relationship OneToMany{
	@id CertificateType to EmployeeSkillCertificate{type(name) required}
}

relationship OneToMany{
	@id EmployeeSkill to EmployeeSkillCertificate{skill required}
}

entity Task {
    name String required
    type TaskType required
    endDate LocalDate
    createdAt ZonedDateTime required
    modifiedAt Instant required
    done Boolean required
    description TextBlob required
    attachment Blob required
    picture ImageBlob required
}

enum TaskType {
    TYPE1, TYPE2, TYPE3
}

entity TaskComment {
    // detect autoIncrement
    @id id Long
    value String required
}

//relationship with name and without id to make sure we do not brake those
relationship ManyToOne {
    TaskComment{task(name) required} to Task
}

//ManyToMany with complex ids
relationship ManyToMany {
    EmployeeSkill{task(name)} to Task{employeeSkill}
}

//double OneToMany to check double imports, variables names...
relationship OneToMany {
    Employee{taughtSkill(name)} to EmployeeSkill{teacher(fullname) required}
}

//Entity With integer id not called Id (not autoIncrement)
entity PriceFormula {
    @id max Integer required
    formula String required
}

relationship ManyToOne {
    Task{user(login) required} to User
}

entity WithIdString {
    @id id String required
}

entity WithIdStringDetails {
    name String
}

relationship OneToOne {
    WithIdStringDetails to WithIdString with jpaDerivedIdentifier
}

dto * with mapstruct
service * with serviceImpl
filter *
paginate TaskComment, Employee, EmployeeSkill, EmployeeSkillCertificate with pagination
